"""new tast 2 tag table

Revision ID: b54d5c948587
Revises: 1605ceafdff3
Create Date: 2023-07-12 14:07:53.690365

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b54d5c948587'
down_revision = '1605ceafdff3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_2_tag',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'task_id')
    )
    op.drop_index('ix_task_to_tag_tag_id', table_name='task_to_tag')
    op.drop_index('ix_task_to_tag_task_id', table_name='task_to_tag')
    op.drop_table('task_to_tag')
    op.alter_column('task', 'finished',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('task', 'finished',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.create_table('task_to_tag',
    sa.Column('task_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name='task_to_tag_tag_id_fkey'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], name='task_to_tag_task_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='task_to_tag_pkey'),
    sa.UniqueConstraint('task_id', 'tag_id', name='task_to_tag_task_id_tag_id_key')
    )
    op.create_index('ix_task_to_tag_task_id', 'task_to_tag', ['task_id'], unique=False)
    op.create_index('ix_task_to_tag_tag_id', 'task_to_tag', ['tag_id'], unique=False)
    op.drop_table('task_2_tag')
    # ### end Alembic commands ###
